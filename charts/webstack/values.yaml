cert_manager:
  enabled: true
  parameters:
    installCRDs: 'true'
#  values: |
#    # empty file

ingress:
  enabled: true
  provider: "k3d"
  providers:
    digitalocean:
        parameters:
          controller.service.annotations.service.beta.kubernetes.io/do-loadbalancer-name: "k8start"
          # required for cert-manager http acme solver to work
          # https://github.com/digitalocean/digitalocean-cloud-controller-manager/blob/master/docs/controllers/services/examples/README.md#accessing-pods-over-a-managed-load-balancer-from-inside-the-cluster
          service.beta.kubernetes.io/do-loadbalancer-hostname: "only-for-internal-use.devit.ovh"
          controller.service.annotations.service.beta.kubernetes.io/do-loadbalancer-enable-proxy-protocol: 'true'
          controller.service.config.use-proxy-protocol: 'true'
#        values: |
#          # empty file
    k3d:
        parameters:
          controller.service.annotations.ingress.running.in.k3d.dummy: "true"
          controller.metrics.enabled: "true"
          controller.podAnnotations."prometheus\.io/scrape": "true"
          controller.podAnnotations."prometheus\.io/port": "10254"
          controller.config.enable-access-log-for-default-backend: "true"
        values: |
          controller:
            extraArgs:
              # name of this service can be tricky
              # if this backend is not reachable controller wont start
              # todo find a better way to set this name into child chart
              default-backend-service: webstack/webstack-default-backend-http-headers

http_headers:
  enabled: true

default_backend:
  enabled: true
  parameters:
    ingress.enabled: false

argocd:
  project: "default"
  namespace: "argocd"
  spec:
    destination:
      server: https://kubernetes.default.svc
      namespace: "webstack"
    source:
      repoURL: https://github.com/bukowa/k8start
      targetRevision: HEAD
